{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Python-TikTok\u2019s documentation!","text":"<p>A Python wrapper around for TikTok API  .</p>"},{"location":"#introduction","title":"Introduction","text":"<p>This library provides a Python interface TikTok developer and business API.</p> <p>For now, this library provide two different API wrapper for TikTok.</p> <ul> <li>TikTok for developers</li> <li>TikTok for Business Account</li> </ul> <p>Tips</p> <p>Library work on Python 3.6.2+.</p>"},{"location":"CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p>"},{"location":"CHANGELOG/#0111-2025-05-30","title":"0.1.11 (2025-05-30)","text":""},{"location":"CHANGELOG/#fix","title":"Fix","text":"<ul> <li>make list type parameters well.</li> </ul>"},{"location":"CHANGELOG/#0110-2024-12-16","title":"0.1.10 (2024-12-16)","text":""},{"location":"CHANGELOG/#features","title":"Features","text":"<ul> <li>Add api for get account post privacy setting</li> <li>Add api for get post publish status</li> <li>fix fields type in get data.</li> </ul>"},{"location":"CHANGELOG/#019-2024-08-07","title":"0.1.9 (2024-08-07)","text":""},{"location":"CHANGELOG/#features_1","title":"Features","text":"<ul> <li>Add api for URL properties manage.</li> <li>Add api for publish photo post.</li> <li>Add api for revoke access token.</li> <li>Remove Python3.6 support.</li> <li>Remove deprecated version v1.2</li> </ul>"},{"location":"CHANGELOG/#018-2024-02-22","title":"0.1.8 (2024-02-22)","text":""},{"location":"CHANGELOG/#fix_1","title":"Fix","text":"<ul> <li>make parameters well</li> </ul>"},{"location":"CHANGELOG/#017-2023-08-28","title":"0.1.7 (2023-08-28)","text":""},{"location":"CHANGELOG/#features_2","title":"Features","text":"<ul> <li>Add api for Authentication 2.0</li> <li>Add recent update for api, new fields and new parameters.</li> </ul>"},{"location":"CHANGELOG/#016-2022-12-26","title":"0.1.6 (2022-12-26)","text":""},{"location":"CHANGELOG/#features_3","title":"Features","text":"<ul> <li>Add api for get hashtag suggestions.</li> </ul>"},{"location":"CHANGELOG/#015-2022-08-24","title":"0.1.5 (2022-08-24)","text":""},{"location":"CHANGELOG/#fix_2","title":"Fix","text":"<ul> <li>fix sometimes the <code>requests</code> module raise the <code>JSONDecodeError not found</code>.</li> </ul>"},{"location":"CHANGELOG/#014-2022-08-23","title":"0.1.4 (2022-08-23)","text":""},{"location":"CHANGELOG/#features_4","title":"Features","text":"<ul> <li>Add api version v1.3 support.</li> </ul>"},{"location":"CHANGELOG/#013-2022-07-02","title":"0.1.3 (2022-07-02)","text":""},{"location":"CHANGELOG/#fix_3","title":"Fix","text":"<ul> <li>Kit api errors</li> <li>update docs</li> </ul>"},{"location":"CHANGELOG/#012-2022-06-25","title":"0.1.2 (2022-06-25)","text":""},{"location":"CHANGELOG/#fix_4","title":"Fix","text":"<ul> <li>Parameter error fixed.</li> </ul>"},{"location":"CHANGELOG/#011-2022-06-16","title":"0.1.1 (2022-06-16)","text":""},{"location":"CHANGELOG/#features_5","title":"Features","text":"<ul> <li>Add response error handler.</li> </ul>"},{"location":"CHANGELOG/#010-2022-06-10","title":"0.1.0 (2022-06-10)","text":""},{"location":"CHANGELOG/#features_6","title":"Features","text":"<ul> <li>Support for business API.</li> <li>Support for kit API.</li> </ul>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#dependencies","title":"Dependencies","text":"<p>These distributions will be installed automatically when installing python-tiktok.</p> <ul> <li>Requests is an elegant and simple HTTP library for Python, built for human beings.</li> <li>dataclasses-json a library provides a simple API for encoding and decoding dataclasses to and from JSON.</li> </ul>"},{"location":"installation/#installation","title":"Installation","text":""},{"location":"installation/#from-pypi","title":"From <code>Pypi</code>","text":"<pre><code>$ pip install python-tiktok \n</code></pre>"},{"location":"installation/#from-source","title":"From source","text":"<p>use <code>Poetry</code></p> <pre><code>$ git clone https://github.com/sns-sdks/python-tiktok\n$ cd python-tiktok\n$ make env\n$ poetry build\n</code></pre>"},{"location":"installation/#testing","title":"Testing","text":"<p>Test the code, Run:</p> <pre><code>make test\n</code></pre> <p>See the coverage information:</p> <pre><code>make cov-term\n</code></pre>"},{"location":"authorization/business-authorization/","title":"Authorization for Business","text":"<p>Before you use the Business Account API, you(the developer) need to first get authorization from the business to manage their accounts.</p> <p>See more detail at docs</p>"},{"location":"authorization/business-authorization/#procedure","title":"Procedure","text":""},{"location":"authorization/business-authorization/#prerequisites","title":"Prerequisites","text":"<ul> <li>Your app ID</li> <li>Your app secret</li> <li>Authorization URL</li> </ul> <p>These can be found in <code>My Apps</code> &gt; <code>App Detail</code> &gt; <code>Basic Information</code>.</p>"},{"location":"authorization/business-authorization/#do-authorize","title":"Do Authorize","text":"<p>When the target business account user to visit the <code>Authorization URL</code>, user will reviews and approves the authorization request.</p> <p>Once the user authorizes the application for the requested permission scopes, they are redirected to the applications specified redirect URL, with an authorization code included as an added query parameter in the URL (along with the state query parameter if initially included).</p> <p>Example: <code>https://example.com/callback?code=xxxxxx-aw%2A3%214964&amp;scopes=user.info.basic%2Cvideo.list</code></p>"},{"location":"authorization/business-authorization/#generate-access-token","title":"Generate Access Token","text":"<p>If you got the redirect url, you can use the code to get access token.</p> <pre><code>from pytiktok import BusinessAccountApi\n\napi = BusinessAccountApi(app_id=\"Your app ID\", app_secret=\"Your app secret\")\n\napi.generate_access_token(code=\"Code in redirect url\", return_json=True)\n# Response: {'access_token':'xxxxx','creator_id':'xxxxxxx','expires':86400,'refresh_expires':31536000,'refresh_token':'xxxxx','scope':'user.info.basic,video.list,video.insights,comment.list,comment.list.manage,video.publish,user.insights','token_type':'bearer'}\n</code></pre> <p>Now the current instance <code>api</code> has hold the access token, you can to get some data from TikTok.</p> <pre><code>api.get_account_data(business_id=\"creator_id in response\", return_json=True)\n# Response: {'code':0,'message':'OK','request_id':'20220701063301010002006005005006003019117A7E27','data':{'profile_image':'https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/accb4aeac4ec812e2bdc45ce1da1ed39~c5_168x168.jpeg?x-expires=1656828000&amp;x-signature=MmXPWeImP%2BRGBwAOqN3wjPpDiZE%3D','display_name':'kiki'}}\n</code></pre>"},{"location":"authorization/business-authorization/#refresh-access-token","title":"Refresh Access Token","text":"<p>The access token is valid for one day. Once an access token has expired, you need to make a request to this endpoint to renew the access token. Remember to pass in the refresh_token for a token renewal request.</p> <pre><code>api.refresh_access_token(refresh_token=\"refresh_token in response\", return_json=True)\n# Response: {'access_token':'xxxxx','creator_id':'xxxxxxx','expires':86400,'refresh_expires':31536000,'refresh_token':'xxxxx','scope':'user.info.basic,video.list,video.insights,comment.list,comment.list.manage,video.publish,user.insights','token_type':'bearer'}\n</code></pre>"},{"location":"authorization/kit-authorization/","title":"Authorization for developers","text":"<p>Before you use the developer kit API, you (the developer) need to have an app.</p> <p>Please obtain a client key and secret from the developer portal on <code>https://developers.tiktok.com</code> under \"My apps\".</p>"},{"location":"authorization/kit-authorization/#procedure","title":"Procedure","text":""},{"location":"authorization/kit-authorization/#prerequisites","title":"Prerequisites","text":"<ul> <li>Your app client ID</li> <li>Your app client secret</li> <li>Redirect URL</li> </ul> <p>These can be found in <code>Manage apps</code> &gt; <code>App Detail</code>.</p>"},{"location":"authorization/kit-authorization/#initial-api","title":"Initial Api","text":"<p>Initial Api instance to call api.</p> <pre><code>from pytiktok import KitApi\n\napi = KitApi(client_id=\"Your client ID\", client_secret=\"Your client secret\")\n</code></pre> <p>By default, The callback uri is https://localhost/, You need add this url to App's settings.</p>"},{"location":"authorization/kit-authorization/#get-authorize-url","title":"Get Authorize url","text":"<p>Get authorize url for user to login</p> <pre><code>api.get_authorize_url()\n# Response\" ('https://www.tiktok.com/auth/authorize/?client_key=xxx&amp;scope=user.info.basic%2Cvideo.list&amp;response_type=code&amp;redirect_uri=https%3A%2F%2Flocalhost%2F&amp;state=DzHqVZFdmiWhvIXU', 'DzHqVZFdmiWhvIXU')\n</code></pre> <p>Once the user authorizes the application for the requested permission scopes, they are redirected to the applications specified redirect URL, with an authorization code included as an added query parameter in the URL (along with the state query parameter if initially included).</p> <p>Example: <code>https://localhost/?code=code&amp;scopes=user.info.basic%2Cvideo.list&amp;state=DzHqVZFdmiWhvIXU</code></p>"},{"location":"authorization/kit-authorization/#generate-access-token","title":"Generate Access Token","text":""},{"location":"authorization/kit-authorization/#httpsapiprodonesightcomtiktokcallbackcode0ztn0kz5ds2m4jxay92zmaeavuayatqbvdbhwkuany0sa0ttmh1rq2wa5nlh0ommmsn9-spr8s1u7rstvybrvf95ljuonkt4fodg_69xu642a0215413scopesuserinfobasic2cvideoliststatedzhqvzfdmiwhvixu","title":"https://apiprod.onesight.com/tiktokcallback?code=0ZTN0kZ5ds2M4JXaY92zmAEAvuayatQBVDBhWkUAny0SA0ttMh1RQ2Wa5NlH0oMMMSN9-SpR8S1U7RstvYbRVf95LJUONKt4fODG_69XU64%2A0%215413&amp;scopes=user.info.basic%2Cvideo.list&amp;state=DzHqVZFdmiWhvIXU","text":"<pre><code>api.generate_access_token(code=\"Code in redirect url\")\n# Response: {\"data\":{\"access_token\":\"access_token\",\"captcha\":\"\",\"desc_url\":\"\",\"description\":\"\",\"error_code\":0,\"expires_in\":86400,\"log_id\":\"20220701091238010004004007735002017070F8D12\",\"open_id\":\"_000Hqnyyz5UYe39YWBZwFnaQGfyaoh3s4IY\",\"refresh_expires_in\":31536000,\"refresh_token\":\"refresh_token\",\"scope\":\"user.info.basic,video.list\"},\"message\":\"success\"}\n</code></pre> <p>Now the current instance <code>api</code> has hold the access token, you can to get some data from TikTok.</p>"},{"location":"authorization/kit-authorization/#refresh-access-token","title":"Refresh Access Token","text":"<pre><code>api.refresh_access_token(refresh_token=\"Your refresh token\", return_json=True)\n# Response: {\"data\":{\"access_token\":\"access_token\",\"captcha\":\"\",\"desc_url\":\"\",\"description\":\"\",\"error_code\":0,\"expires_in\":86400,\"log_id\":\"20220701091238010004004007735002017070F8D12\",\"open_id\":\"_000Hqnyyz5UYe39YWBZwFnaQGfyaoh3s4IY\",\"refresh_expires_in\":31536000,\"refresh_token\":\"refresh_token\",\"scope\":\"user.info.basic,video.list\"},\"message\":\"success\"}\n</code></pre>"},{"location":"authorization/kit-authorization/#revoke-access-token","title":"Revoke Access Token","text":"<pre><code>api.revoke_access_token(open_id=\"\", access_token=\"\", return_json=True)\n# Response: {'data':{'captcha':'','desc_url':'','description':'','error_code':0,'log_id':'202207011230000100040030050060030000071B538'},'message':'success'}\n</code></pre>"},{"location":"usage/preparation/","title":"Preparation","text":""},{"location":"usage/preparation/#preparation","title":"Preparation","text":"<p>For now, this library provide two different API wrapper for TikTok.</p> <ul> <li>TikTok for developers</li> <li>TikTok for Business Account</li> </ul> <p>I assume that you read the docs and have some knowledge of these.</p> <p>Now let's go.</p>"},{"location":"usage/business_account/account/","title":"Account","text":""},{"location":"usage/business_account/account/#accounts-data","title":"Accounts Data","text":""},{"location":"usage/business_account/account/#get-business-account-data","title":"Get Business Account Data","text":"<p>Access detailed analytics and insights about a TikTok business accounts follower base and profile engagement. </p> <pre><code>api.get_account_data(business_id=\"Your business id\", return_json=True)\n# Response: {'code':0,'message':'OK','request_id':'2022070106561301000400402500400500600301500A52386','data':{'display_name':'kiki','profile_image':'https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/accb4aeac4ec812e2bdc45ce1da1ed39~c5_168x168.jpeg?x-expires=1656828000&amp;x-signature=MmXPWeImP%2BRGBwAOqN3wjPpDiZE%3D'}}\n</code></pre>"},{"location":"usage/business_account/comment/","title":"Comment","text":""},{"location":"usage/business_account/comment/#comment-data","title":"Comment Data","text":"<p>There have simple usage for manage comments for videos.</p>"},{"location":"usage/business_account/comment/#get-all-comments-on-an-owned-video","title":"Get all comments on an owned video","text":"<pre><code>api.get_video_comments(business_id=\"Your business id\", video_id=\"Your video id\", return_json=True)\n# Response: {'code':0,'message':'OK','request_id':'20220701072655010002007637004005006003006134680EF','data':{'has_more':False,'comments':[{'video_id':'7109065174526479622','liked':False,'pinned':False,'user_id':'367b786990e8dcebcf493e035b820f5be4834422511c851b3bd0010f9690adbc','text':'nice','replies':11,'username':'phoenix202312121','status':'PUBLIC','likes':0,'create_time':'1655461098','owner':False,'comment_id':'7110150495453840130','profile_image':'https://p16-sign-sg.tiktokcdn.com/tiktok-obj/1666477470268417~c5_168x168.jpeg?x-expires=1656831600&amp;x-signature=W%2FAanEtkfRORbU141d2UeZQnxzc%3D'},{'video_id':'7109065174526479622','liked':False,'pinned':False,'user_id':'6faa870ee45c1f68a2d98d50e09f222a04069380c1032f1919f3ffe25be1f085','text':'xxxxxxxx','replies':0,'username':'klein_kunkun','status':'PUBLIC','likes':0,'create_time':'1655870005','owner':False,'comment_id':'7111907185164763905','profile_image':'https://p16-sign-sg.tiktokcdn.com/tiktok-obj/7046311066329939970~c5_168x168.jpeg?x-expires=1656831600&amp;x-signature=9GsDTVTn9%2Bvb%2FFBkxZGaOlIkTM4%3D'}],'cursor':2}}\n</code></pre>"},{"location":"usage/business_account/comment/#get-all-replies-to-a-comment","title":"Get all replies to a comment","text":"<pre><code>api.get_comment_replies(\n    business_id=\"Your business id\", video_id=\"Your video id\",\n    comment_id=\"Comment id\", return_json=True\n)\n# Response: {'code':0,'message':'OK','request_id':'202207010730350100020060050050060030001099BEF5','data':{'has_more':False,'cursor':1,'comments':[{'profile_image':'https://p16-sign-sg.tiktokcdn.com/tiktok-obj/7046311066329939970~c5_168x168.jpeg?x-expires=1656831600&amp;x-signature=9GsDTVTn9%2Bvb%2FFBkxZGaOlIkTM4%3D','create_time':'1656660622','video_id':'7109065174526479622','status':'PUBLIC','owner':False,'comment_id':'7115302925501563650','likes':0,'parent_comment_id':'7111907185164763905','username':'klein_kunkun','text':'hh','liked':False,'user_id':'6faa870ee45c1f68a2d98d50e09f222a04069380c1032f1919f3ffe25be1f085'}]}}\n</code></pre>"},{"location":"usage/business_account/comment/#create-a-new-comment-on-an-owned-video","title":"Create a new comment on an owned video","text":"<pre><code>api.create_comment(business_id=\"Your business id\", video_id=\"Your video id\", text=\"Comment text\", return_json=True)\n# Response: {\"code\":0,\"message\":\"Ok\",\"request_id\":\"20210817034316010245031056097316BA\",\"data\":{\"comment_id\":\"6990565363377392901\",\"video_id\":\"6990565363377392901\",\"create_time\":1627617835,\"text\":\"this is a comment\"}}\n</code></pre>"},{"location":"usage/business_account/comment/#reply-to-an-existing-comment-on-an-owned-video","title":"Reply to an existing comment on an owned video","text":"<pre><code>api.create_reply(\n    business_id=\"Your business id\", video_id=\"Your video id\",\n    comment_id=\"Comment id\", text=\"Reply text\", return_json=True\n)\n# Response: {\"code\":0,\"message\":\"Ok\",\"request_id\":\"20210817034316010245031056097316BA\",\"data\":{\"comment_id\":\"6990565363377392901\",\"video_id\":\"6990565363377392901\",\"create_time\":1627617835,\"text\":\"this is a comment\"}}\n</code></pre>"},{"location":"usage/business_account/comment/#likeunlike-an-existing-comment-on-an-owned-video","title":"Like/unlike an existing comment on an owned video","text":"<pre><code># like a comment\napi.like_comment(business_id=\"Your business id\", comment_id=\"Comment id\", action=\"LIKE\", return_json=True)\n# Response: {\"code\":0,\"message\":\"Ok\",\"request_id\":\"20210817034316010245031056097316BA\",\"data\":{}}\n\n# unlike a comment\napi.like_comment(business_id=\"Your business id\", comment_id=\"Comment id\", action=\"UNLIKE\", return_json=True)\n# Response: {\"code\":0,\"message\":\"Ok\",\"request_id\":\"20210817034316010245031056097316BA\",\"data\":{}}\n</code></pre>"},{"location":"usage/business_account/comment/#pinunpin-an-existing-comment-on-an-owned-video","title":"Pin/unpin an existing comment on an owned video","text":"<pre><code># pin a comment\napi.pin_comment(business_id=\"Your business id\", comment_id=\"Comment id\", action=\"PIN\", return_json=True)\n# Response: {\"code\":0,\"message\":\"Ok\",\"request_id\":\"20210817034316010245031056097316BA\",\"data\":{}}\n\n# unpin a comment\napi.pin_comment(business_id=\"Your business id\", comment_id=\"Comment id\", action=\"UNPIN\", return_json=True)\n# Response: {\"code\":0,\"message\":\"Ok\",\"request_id\":\"20210817034316010245031056097316BA\",\"data\":{}}\n</code></pre>"},{"location":"usage/business_account/comment/#hideunhide-an-existing-comment-on-an-owned-video","title":"Hide/unhide an existing comment on an owned video","text":"<pre><code># hide a comment\napi.hide_comment(business_id=\"Your business id\", comment_id=\"Comment id\", action=\"HIDE\", return_json=True)\n# Response: {\"code\":0,\"message\":\"Ok\",\"request_id\":\"20210817034316010245031056097316BA\",\"data\":{}}\n\n# unhide a comment\napi.hide_comment(business_id=\"Your business id\", comment_id=\"Comment id\", action=\"UNHIDE\", return_json=True)\n# Response: {\"code\":0,\"message\":\"Ok\",\"request_id\":\"20210817034316010245031056097316BA\",\"data\":{}}\n</code></pre>"},{"location":"usage/business_account/comment/#delete-an-existing-comment-on-an-owned-video","title":"Delete an existing comment on an owned video","text":"<pre><code>api.delete_comment(business_id=\"Your business id\", comment_id=\"Comment id\", return_json=True)\n# Response: {\"code\":0,\"message\":\"Ok\",\"request_id\":\"20210817034316010245031056097316BA\",\"data\":{}}\n</code></pre>"},{"location":"usage/business_account/url_properties/","title":"URL properties","text":""},{"location":"usage/business_account/url_properties/#manage-url-properties","title":"Manage URL properties","text":"<p>Verifying ownership of video URLs is an essential step to comply with TikTok's policies around copyrighted content and user safety.</p> <p>More to see Manage URL properties</p>"},{"location":"usage/business_account/url_properties/#add-url-property","title":"Add URL property","text":"<p>Add a URL property (domain or URL prefix) that you want to verify ownership of, to an advertiser account.</p> <p>More to see Add URL property</p> <pre><code>api.add_url_property(\n    app_id=\"app id\",\n    property_type=1,\n    url=\"example.com\"\n)\n# BusinessUrlPropertyInfoResponse(code=0, message='OK', request_id='202408070935578A03C337841C0A6EB22B', data=BusinessUrlPropertyInfoData(url_property_info=BusinessUrlPropertyInfo(property_type=1, url='example.com')))\n</code></pre>"},{"location":"usage/business_account/url_properties/#check-url-property-verification","title":"Check URL property verification","text":"<p>Check the result of the ownership verification for a URL property (domain or URL prefix).</p> <p>More to see Check URL property verification</p> <pre><code>api.check_url_property_verification(\n    app_id=\"app id\",\n    property_type=1,\n    url=\"example.com\"\n)\n# BusinessUrlPropertyInfoResponse(code=0, message='OK', request_id='202408070935578A03C337841C0A6EB22B', data=BusinessUrlPropertyInfoData(url_property_info=BusinessUrlPropertyInfo(property_type=1, url='example.com')))\n</code></pre>"},{"location":"usage/business_account/url_properties/#delete-url-property","title":"Delete URL property","text":"<p>Delete an advertiser account's verified ownership of a URL property (domain or URL prefix).</p> <p>More to see Delete URL property</p> <pre><code>api.delete_url_property(\n    app_id=\"app id\",\n    property_type=1,\n    url=\"example.com\"\n)\n# BusinessBaseResponse(code=0, message='OK', request_id='202408070935578A03C337841C0A6EB22B')\n</code></pre>"},{"location":"usage/business_account/url_properties/#get-added-url-properties","title":"Get added URL properties","text":"<p>Get the list of URL properties that have been added to an advertiser account.</p> <p>More to see Get added URL properties</p> <pre><code>api.get_added_url_properties(\n    app_id=\"app id\"\n)\n# BusinessUrlPropertyInfoListResponse(code=0, message='OK', request_id='2024080709351926240BB44FDD60705E4E', data=BusinessUrlPropertyInfoListData(url_property_info_list=[BusinessUrlPropertyInfo(property_type=1, url='example.com'), BusinessUrlPropertyInfo(property_type=1, url='sub.example.com')]))\n</code></pre>"},{"location":"usage/business_account/video/","title":"Video","text":""},{"location":"usage/business_account/video/#video-data","title":"Video Data","text":"<p>You can get account video data or publish video for account.</p>"},{"location":"usage/business_account/video/#get-account-videos","title":"Get Account Videos","text":"<pre><code>api.get_account_videos(business_id=\"Your business id\", return_json=True)\n# Response: {'code':0,'message':'OK','request_id':'2022070107152301000200300500600300009C51712','data':{'has_more':False,'cursor':1655118106000,'videos':[{'item_id':'7109065174526479622'},{'item_id':'7109064881462152453'},{'item_id':'7108684822863760646'},{'item_id':'7108678102229781766'}]}}\n</code></pre>"},{"location":"usage/business_account/video/#get-account-video-by-filter-videos","title":"Get Account Video by filter videos","text":"<pre><code>api.get_account_videos(\n    business_id=\"Your business id\",\n    filters={\"video_ids\": [\"7108684822863760646\", \"7109064881462152453\"]}, \n    return_json=True\n)\n# Response: {'code':0,'message':'OK','request_id':'20220701071724010004003007735002053068B3FD9','data':{'videos':[{'item_id':'7108684822863760646'},{'item_id':'7109064881462152453'}],'has_more':False,'cursor':0}}\n</code></pre>"},{"location":"usage/business_account/video/#publish-public-video","title":"Publish public video","text":"<p>Publish a video to your account, you need have video url(A publicly accessible HTTP(s) URL for the video content to be published - with a minimum recommended TTL of 30 minutes).</p> <pre><code>api.create_video(\n    business_id=\"Your business id\", video_url=\"https://s3.amazonaws.com/tiktok-videos/video.mp4\",\n    post_info={\n        \"caption\": \"Caption for video\",\n        \"disable_comment\": False,\n        \"disable_duet\": False,\n        \"disable_stitch\": False,\n    },\n    return_json=True\n)\n# Response: {\"code\":0,\"message\":\"Ok\",\"request_id\":\"20210817034316010245031056097316BA\",\"data\":{\"share_id\":\"videopublish.8111673464968467978\"}}\n</code></pre>"},{"location":"usage/business_account/video/#publish-photo-post","title":"Publish photo post","text":"<p>Publish a photo post to an owned TikTok Account.</p> <pre><code>api.create_photo(\n    business_id=\"business id\",\n    photo_images=[\n        \"https://example.com/photo1.jpg\",\n        \"https://example.com/photo2.jpg\",\n        \"https://example.com/photo3.jpg\"\n    ],\n    post_info={\n        \"privacy_level\": \"PUBLIC_TO_EVERYONE\",\n        \"title\": \"Photo post title\",\n        \"auto_add_music\": True\n    }\n)\n# Response: {\"code\":0,\"message\":\"Ok\",\"request_id\":\"20210817034316010245031056097316BA\",\"data\":{\"share_id\":\"p_pub_url~v1.2345123456789123456\"}}\n</code></pre> <p>Now your video or photo post has submitted to TikTok, Once video or photo post been processed, video publish status will send by webhook.</p> <p>More see Video Webhook events, Photo Webhook events.</p>"},{"location":"usage/kit/qrcode/","title":"Login Kit with QR Code","text":"<p>This doc will provide instruction on how to integrate QR code authorization capability with TikTok in your web application. This will enable your app to access TikTok user data within approved scopes using obtained access token.</p> <p>More detail in docs.</p>"},{"location":"usage/kit/qrcode/#get-qr-code-endpoint","title":"Get QR Code Endpoint","text":"<pre><code>api.get_qrcode(return_json=True)\n# Response: {'data':{'error_code':0,'qrcode':'iVBxxxx,   'scan_qrcode_url': 'aweme://authorize?authType=1&amp;client_key=xxxx&amp;client_ticket=tobefilled&amp;next_url=https%3A%2F%2F127.0.0.1%3A9338%2Foauth%2Fscan_qrcode%2F%3Fclient_ticket%3Dtobefilled&amp;qr_source_aid=0&amp;scope=user.info.basic%2Cvideo.list&amp;token=token,'token':'token},  'extra': {'error_detail': '',   'logid': '202207020612540100040030077350020071BBBF03A'},  'message': 'success'}\n</code></pre>"},{"location":"usage/kit/qrcode/#check-qr-code-endpoint","title":"Check QR code Endpoint","text":"<pre><code>api.check_qrcode(token=\"token\", return_json=True)\n# Response: {'data':{'error_code':0,'status':'expired'},'extra':{'error_detail':'','logid':'202207020615200100040040250040050060030120105295B'},'message':'success'}\n</code></pre>"},{"location":"usage/kit/user/","title":"User","text":""},{"location":"usage/kit/user/#user","title":"User","text":""},{"location":"usage/kit/user/#get-user-info","title":"Get User Info","text":"<p>Get some basic information of a given TikTok user.</p> <pre><code>api.get_user_info(open_id=\"Open id for user\", return_json=True)\n# Response: {'data':{'user':{'open_id':'open_id','union_id':'union_id','avatar_url':'https://p16-sign-sg.tiktokcdn.com/tiktok-obj/7046311066329939970~c5_168x168.jpeg?x-expires=1656907200&amp;x-signature=w4%2FugSm2IOdma6p0D9V%2FZneIlPU%3D','display_name':'ki'}},'error':{'code':0,'message':''}}\n</code></pre>"},{"location":"usage/kit/video/","title":"Video","text":""},{"location":"usage/kit/video/#video","title":"Video","text":""},{"location":"usage/kit/video/#get-user-videos","title":"Get User videos","text":"<p>Get a paginated list of given user's public TikTok video posts</p> <pre><code>api.get_user_videos(open_id=\"Open id for user\", return_json=True)\n# Response: {'data':{'videos':[{'create_time':1654670085,'share_url':'https://www.tiktok.com/@klein_kunkun/video/7106753891953347842?utm_campaign=tt4d_open_api&amp;utm_source=aw46lwwtsqjeapig','duration':5,'id':'7106753891953347842'},{'create_time':1654658105,'share_url':'https://www.tiktok.com/@klein_kunkun/video/7106702437926407426?utm_campaign=tt4d_open_api&amp;utm_source=aw46lwwtsqjeapig','duration':6,'id':'7106702437926407426'}],'cursor':1654658105000,'has_more':False},'error':{'code':0,'message':''}}\n</code></pre>"},{"location":"usage/kit/video/#query-user-videos","title":"Query user videos","text":"<p>Given a user and a list of video ids, can check if the videos belong to the requesting user and fetch the data of videos belonging to the user. </p> <pre><code>api.query_videos(open_id=\"Open id for user\", filters={\"video_ids\": [\"7106753891953347842\"]}, return_json=True)\n# Response: {'data':{'videos':[{'create_time':1654670085,'share_url':'https://www.tiktok.com/@klein_kunkun/video/7106753891953347842?utm_campaign=tt4d_open_api&amp;utm_source=aw46lwwtsqjeapig','duration':5,'id':'7106753891953347842'}],'cursor':0,'has_more':False},'error':{'code':0,'message':''}}\n</code></pre>"},{"location":"usage/kit/video/#share-video-for-user","title":"Share Video for user","text":"<p>Share Video API allows users to share videos from your Web or Desktop app into TikTok.</p> <pre><code>filename = \"your mp4 file path\"\nwith open(filename, \"rb\") as fb:\n    response = api.share_video(open_id=\"Open id for user\", video=\"Video file object\")\n# Response: {'data':{'err_code':0,'error_code':0,'share_id':'v_inbox.7115544584662829102'},'extra':{'error_detail':'','logid':'2022070206304301000400300500600301908104B50'}}\n</code></pre>"}]}